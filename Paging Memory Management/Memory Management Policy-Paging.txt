AIM:-
TO Implement the memory management Policy-Paging


ALGORITHM:-
Step 1:- Read the necessary input from the keyboard.
Step 2:- Pages logically memory is broken into fixed sized blocks.
Step 3:- Frames physical memory is broken into fixed sized blocks.
Step 4:- Calculate the physical address using the following physical address:
		(frame number * frame size) + offset.
Step 5:- Display the physical address
Step 6:- Stop the process.


PROGRAM:-
#include<stdio.h>
//#include<conio.h>
//#include<math.h>
int main()
{
	int size, m, n, Pgno, Pagetable[3]={5,6,7}, i, j, frameno;
	double m1;
	int ra=0, ofs;
	//clrscr();
	Printf("Enter Process size: ");      //Reading memory size
	scanf("%d", & size);
	m1 = size / 4;
	n = ceil(m1);
	printf("Total Number of Pages: %d", n);
	printf("\n Enter Relative address \n");
	//The length of relative address is: 16 bits && The size of offset is: 12 bits.
	scanf("%d", & ra);
	Pgno = ra/1000;				//Calculating physical address
	ofs = ra%1000;
	printf("Page no = %d \n", Pgno);
	printf("Page table");
	for(i=0;i<n;i++)
	printf("\n %d[%d]", i, Pagetable[i]);
	frameno = Pagetable[Pgno];
	printf("\n Equivalent Physical Address: %d %d", frameno, ofs);
	//getch();
}


OUTPUT:-
Enter Process size: 12

Total number of pages: 3

Enter Relative address
1

page no = 0

Page table
0[5]
1[6]
2[7]

Equivalent Physical Address: 51