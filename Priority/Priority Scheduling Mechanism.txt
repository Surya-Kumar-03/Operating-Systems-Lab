AIM:-
Write a C Program to Implement the Process Scheduling Mechanism as Priority


ALGORITHM:-
Step 1:- Start the process.
Step 2:- Accept the number of process in the ready Queue.
Step 3:- For each process in the ready Queue, assign the process id and accept the CPU Burst time.
Step 4:- Sort the ready Queue according to the priority number.
Step 5:- Set the waiting time of the first process as '0' and its Burst time as its Turnaround time.
Step 6:- For each process in the ready Queue, Calculate
		(a) Waiting time for process(n) = Waiting time of process(n-1) + Burst time of process(n-1)
		(b) Turnaround time for process(n) = Waiting time of process(n) + Burst time for process(n)
Step 7:- Calculate
		(a) Average Waiting time = Total Waiting time / Number of process
		(b) Average Turnaround time = Total Turnaround time / Number of process
Step 8:- Stop the process.


PROGRAM:-
#include<stdio.h>
int main()
{
	int bt[20], P[20], wt[20], tat[20], Pr[20], i, j, n, total=0, Pos, temp, avg_wt, avg_tat;
	printf("Enter Total number of process: ");
	scanf("%d", &n);
	printf("\n Enter Burst time and Priority \n");
	for(i=0;i<n;i++)
	{
		printf("\n P[%d] \n", i+1);
		printf("Burst time: ");
		scanf("%d", &bt[i]);
		printf("Priority: ");
		scanf("%d", &Pr[i]);
		P[i] = i+1;
	}
	for(i=0;i<n;i++)
	{
		Pos = i;
		for(j=i+1;j<n;j++)
		{
			if(Pr[j] < Pr[Pos])
			Pos = j;
		}
		temp = Pr[i];
		Pr[i] = Pr[Pos];
		Pr[Pos] = temp;

		temp = bt[i];
		bt[i] = bt[Pos];
		bt[Pos] = temp;

		temp = P[i];
		P[i] = P[Pos];
		P[Pos] = temp;
	}
	wt[0] = 0;
	for(i=1;i<n;i++)
	{
		wt[i] = 0;
		for(j=0;j<i;j++)
		wt[i] += bt[j];
		total += wt[i];
	}
	avg_wt = total / n;
	total = 0;
	printf("\n Process \t Burst time \t Waiting time \t Turnaround time");
	for(i=0;i<n;i++)
	{
		tat[i] = bt[i] + wt[i];
		total += tat[i];
		printf("\n P[%d] \t\t\t %d\t\t\t %d\t\t\t %d", P[i], bt[i], wt[i], tat[i]);
	}
	avg_tat = total / n;          //avg Turnaround time
	printf("\n\n Average Waiting time = %d", avg_wt);
	printf("\n Average Turnaround time = %d \n", avg_tat);
	return 0;
}


OUTPUT:-
Enter Total number of Process: 4

Enter Burst time and Priority

P[1]
Burst time: 4
Priority: 2

P[2]
Burst time: 3
Priority: 3

P[3]
Burst time: 6
Priority: 1

P[4]
Burst time: 12
Priority: 3

Process	Burst time		Waiting time	Turnaround time
P[3]		6			0			6
P[1]		4			6			10
P[2]		3			10			13
P[4]		12			13			25

Average Waiting time = 7

Average Turnaround time = 13