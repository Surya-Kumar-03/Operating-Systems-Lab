AIM:-
Write a C Program to Implement the Process Scheduling Mechanism for FCFS


ALGORITHM:-
Step 1:- Start the process.
Step 2:- Accept the number of process in the ready Queue.
Step 3:- For each process in ready Q, assign the process id and accept the CPU burst time.
Step 4:- Set the waiting of the first process as '0' and its burst time as its Turnaround time.
Step 5:- For each process in ready Q Calculate
		(a) Waiting time for process(n) = Waiting time of process(n-1) + Burst time of process(n-1)
		(b) Turnaround time for process(n) = Waiting time of process(n) + Burst time for process(n)
Step 6:- Calculate
		(a) Average Waiting time = Total Waiting time / Number of process
		(b) Average Turnaround time = Total Turnaround time / Number of process
Step 7:- Stop the process


PROGRAM:-
#include<stdio.h>
int main()
{
	int n, bt[20], wt[20], tat[20], avwt=0, avtat=0, i, j;
	printf("Enter total number of process: ");
	scanf("%d", &n);
	printf("nEnter Process Burst time \n");
	for(i=0;i<n;i++)
	{
		printf("P[%d]: ", i+1);
		scanf("%d", &bt[i]);
	}
	wt[0] = 0;
	for(i=1;i<n;i++)
	{
		wt[i] = 0;
		for(j=0;j<i;j++)
		{
			wt[i] += bt[j];
		}
	}
	printf("\nProcess \t Burst time \t Waiting time \t Turnaround time");
	for(i=0;i<n;i++)
	{
		tat[i] = bt[i] + wt[i];
		avwt += wt[i];
		avtat += tat[i];
		printf("\n P[%d]", i+1);
		printf(" ");
		printf("%d", bt[i]);
		printf(" ");
		printf("%d", wt[i]);
		printf(" ");
		printf("%d", tat[i]);
		printf(" ");
	}
	avwt /= i;
	avtat /= i;
	printf("\n\n Average Waiting time: %d", avwt);
	printf("\n Average Turnaround time: %d", avtat);
	return 0;
}


OUTPUT:-
Enter total number of process: 5

nEnter Process Burst time
P[1]=6
P[2]=8
P[3]=4
P[4]=12
P[5]=8

Process	Burst time		Waiting time	Turnaround time
P[1]		6			0			6
P[2]		8			6			14
P[3]		4			14			18
P[4]		12			18			30
P[5]		8			30			38

Average Waiting time = 13
Average Turnaround time = 21